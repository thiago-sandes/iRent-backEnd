swagger: '2.0'
info:
  description: |
    Documentação do Back-End da aplicaçao iRent, disponível em
    [https://github.com/kelveng/iRent-back/](https://github.com/kelveng/iRent-back/)
  version: 1.0.0
  title: iRent-back Documentação

paths:
  /sessions:
    post:
      tags:
      - sessions(autenticação)
      summary: autenticar usuário na aplicação.
      description: isto é feito para autenticar um usuário já cadastrado no sistema
      operationId: autenticaUsuario
      produces:
      - application/json

      parameters:
      - in: body
        name: json
        description: são precisos os seguintes campos no arquivo JSON para fazer a autenticação
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
      responses:
        200:
          description: OK! Serão retornados os seguintes campos em formato json, caso o usuário tenha sido autenticado
          schema:
            type: object
            properties:
              type:
                type: string
                description: tipo do token. Estamos usando token do tipo "bearer"
              token:
                type: string
                description: sequência de caracteres que representa o token usado para autenticação
              refreshToken:
                type: string
                description: token de atualização. Não é muito usado e geralmente vem com valor null
  /users:
    get:
      tags:
        - users
      summary: retorna todos os usuarios
      operationId: index
      description: rota na qual retorna dos os usuarios cadastrado no banco de dados
      responses:
        '200':
          description: operação realizada com sucesso
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '500':
          description: Erro interno do servidor
    post:
      tags:
        - users
      summary: realiza cadastro
      operationId: store
      description: rota que retorna criar um usuario no banco de dados
      parameters:
        - name: username
          in: body
          description: username que será atualizado
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Usuário cadastrado
        '500':
          description: Erro interno do servidor
  '/users/:username':
    get:
      tags:
        - users
      summary: retorna um usuario
      operationId: show
      description: rota que retorna uma usuario
      parameters:
        - name: username
          in: path
          description: username do usuario que será atualizado
          required: true
          type: string
      responses:
        '200':
          description: operação realizada com sucesso
          schema:
            $ref: '#/definitions/User'
        '400':
          description: requisição invalida
        '404':
          description: usuario não encontrado
        '500':
          description: Erro interno do servidor
    put:
      tags:
        - users
      summary: atualiza o usuario
      operationId: update
      description: rota que atualiza os dados do usuario
      parameters:
        - name: username
          in: path
          description: username do usuario que será atualizado
          required: true
          type: string
        - name: username
          in: body
          description: username que será atualizado
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: operação realizada com sucesso
          schema:
            $ref: '#/definitions/User'
        '400':
          description: requisição invalida
        '401':
          description: Não autorizado
        '404':
          description: usuario não encontrado
        '500':
          description: Erro interno do servidor
    delete:
      tags:
        - users
      summary: remove o usuario
      operationId: destroy
      description: rota que remove os dados do usuario
      parameters:
        - name: username
          in: path
          description: username do usuario que será removido
          required: true
          type: string
      responses:
        '200':
          description: Usuário removido
        '404':
          description: usuario não encontrado
        '500':
          description: Erro interno do servido
  /avaliacaoOfertas:
    post:
      tags:
      - avaliacaoOfertas
      summary: criar nova avaliação de oferta
      description: rota que adiciona uma nova avaliação a uma oferta
      operationId: avaliacaoOferta
      produces:
      - application/json

      parameters:
      - in: body
        name: json
        description: são precisos os seguintes campos no arquivo JSON para fazer a avaliação de uma oferta
        required: true
        schema:
          type: object
          properties:
            oferta_id:
              type: integer
              example: 1
            user_id:
              type: integer
              example: 3
            nota:
              type: integer
              example: 4
      responses:
        201:
          description: OK! Serão retornados os seguintes campos em formato json, caso a avaliação tenha sido registrada
          schema:
            type: object
            properties:
              message:
                type: string
                description: \"Avaliação realizada!" deverá ser o conteúdo do campo \"message" do JSON de resposta caso a avalição tenha sido realizada
                example: Avaliação realizada!
  '/avaliacaoOfertas/:oferta_id':  
    get:
      tags:
        - avaliacaoOfertas
      summary: retorna média de avaliações de uma dada oferta
      operationId: mediaAvaliacaoOfertas
      description: rota que retorna a média das avaliações de uma oferta através de seu id
      parameters:
        - name: oferta_id
          in: path
          description: id da oferta que se deseja obter média de avaliações
          required: true
          type: string
      responses:
        200:
          description: média retornada com sucesso
          schema:
            type: object
            properties:
              avg:
                type: number
                description: \"avg:" 4.0000000000000000 é um exemplo de retorno válido, com média de avaliações igual a 4.
                example: "4.0000000000000000"
  
  '/avaliacaoOfertas/:id':       
    put:
      tags:
        - avaliacaoOfertas
      summary: atualiza a avaliação de uma oferta
      operationId: atualizaAvaliacaoOferta
      description: rota que atualiza uma avaliação pelo seu id
      parameters:
        - name: id
          in: path
          description: id da avaliação
          required: true
          type: integer
          
        
        - name: json
          in: body
          description: é preciso enviar o seguinte campo no arquivo JSON para fazer a atualização de uma avaliação
          required: true
          schema:
            type: object
            properties:
              nota:
                type: integer
                example: 4
        
      responses:
        '200':
          description: operação realizada com sucesso
          schema:
            $ref: '#/definitions/AvaliacaoOferta'
        
    
definitions:
  User:
    type: object
    properties:
      username:
        type: string
        description: nome do usuario no sistema
        example: jmarcos
      name:
        type: string
        description: nome do usuario
        example: João Marcos
      email:
        type: string
        description: email do usuario do sistema
        example: jmarcos@gmail.com
      password:
        type: string
        description: senha de login do usuario sistema
        example: 12345678
      telephone:
        type: string
        description: numero de telefone do usuario
        example: 79999995555
      sex:
        type: string
        description: sexo do usuario
        example: M
    required:
      - username
      - name
      - email
      - password
      - telephone
      - sex
  
  AvaliacaoOferta:
    type: object
    properties:
      id:
        type: integer
        description: id da avaliação
        example: 21
      oferta_id:
        type: integer
        description: id da oferta cuja avaliação pertence 
        example: 12
      user_id:
        type: integer
        description: id do usuário cuja avaliação pertence 
        example: 44
      nota:
        type: integer
        description: nota da avaliação(de 0 à 5 no formato estrela)
        example: 4
      created_at:
        type: object
        description: \"timestamp:" informe de quando a avaliação foi criada
        example: "2019-06-17 21:17:36-03"
      updated_at:
        type: object
        description: \"timestamp:" informe de quando a avaliação foi alterada
        example: "2019-06-25 21:00:09-03"
    required:
      - id
      - oferta_id
      - user_id
      - nota

schemes:
 - https
 - http